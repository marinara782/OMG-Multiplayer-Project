Use Case 1: Find a Match
Actors:
 Player (Primary)
 Matchmaking System (Supporting)
Preconditions:
 The player is logged into their account.
 The matchmaking system is operational.
Trigger:
 The player selects “Find Match” from the UI.
Main Flow:
1. The Player requests a match.
2. The Matchmaking System retrieves the player’s skill level and search criteria.
3. The system searches for an available opponent with a similar skill level.
4. If a match is found:
o The system pairs both players.
o A match confirmation is sent to both players.
o The game session begins.
5. If no match is found:
o The player is placed in a queue.
o The system reattempts matchmaking periodically.
Alternative Flows:
 Opponent Not Found: The system expands the skill range after a timeout.
 Player Cancels Matchmaking: The system removes the player from the queue.
 Player Disconnects While Searching: The player is removed from matchmaking.
Postconditions:
 A new match is created and started.
 If no match is found, the player remains in the queue.
Use Case 2: Player Joins a Match
Actors:
 Player (Primary)
 Matchmaking System (Supporting)
 Opponent Player (Supporting)
Preconditions:
 The player is logged in.
 The player has been matched with an opponent.
Trigger:
 The matchmaking system finds an opponent and sends a match confirmation.
Main Flow:
1. The Matchmaking System notifies both players of a found match.
2. Each Player accepts the match.
3. The Matchmaking System starts the game session.
Alternative Flows:
 Player Rejects Match: The match is canceled, and the system searches for a new
opponent.
 Opponent Declines: The system searches for another match.
 Connection Issues: If a player disconnects before confirming, the system cancels
the match.
Postconditions:
 If both players accept, the match starts.
 If a player rejects, matchmaking continues.
Use Case 3: Queue System for Matchmaking
Actors:
 Player (Primary)
 Matchmaking System (Supporting)
Preconditions:
 The player is logged in.
 The player has requested a match.
Trigger:
 No immediate opponent is found.
Main Flow:
1. The Matchmaking System places the player in a queue.
2. The system periodically searches for new opponents.
3. If an opponent is found:
o The system pairs them.
o A match confirmation is sent.
4. If no match is found after a set time:
o The system expands the search criteria.
o The system may provide an option to exit the queue.
Alternative Flows:
 Player Leaves Queue: The player manually exits matchmaking.
 Opponent Found Late: If a match takes too long, the player may be given an option
to cancel.
Postconditions:
 The player either gets matched or remains in the queue.
Use Case 4: Initiate Game-Specific Matchmaking
Scope:
Covers how a player starts matchmaking by selecting a game (Checkers, Tic Tac Toe, or
Connect 4) and using the corresponding rating to find an opponent.
Actors:
● Player (Primary)
● Matchmaking System (Supporting)
Preconditions:
● Player is logged in.
● The matchmaking system is operational.
● The player has an existing rating for the chosen game.
Trigger:
● The player selects “Find Match” and then chooses the specific game for which to be
matched.
Main Flow:
1. The player accesses the “Find Match” interface.
2. The player selects the desired game (e.g., Checkers).
3. The system retrieves the player’s rating for that game.
4. The matchmaking system initiates a search for an opponent with a similar rating.
5. If an opponent is found, the system sends a match invitation to both players.
6. If no opponent is found, the player is placed in the game-specific matchmaking
queue.
Alternative Flows:
● Rating Range Expansion: After a timeout, if no match is found, the system
gradually expands the acceptable rating range.
● Cancellation: If the player cancels the matchmaking request, the system removes
them from the queue.
Postconditions:
● The player is either matched with an opponent for the selected game or remains
queued in that game’s matchmaking pool.
Use Case 5: Manage Pairing and Queueing
Scope:
Focuses on how the matchmaking system handles the queue—monitoring waiting players,
pairing those with similar ratings, and updating the queue accordingly.
Actors:
● Player (Primary)
● Opponent (Supporting)
● Matchmaking System (Supporting)
Preconditions:
● The player has initiated matchmaking for a specific game and is in the queue.
● The system has access to current rating data for that game.
Trigger:
● The player is waiting in the queue after initiating matchmaking.
Main Flow:
1. The matchmaking system periodically scans the queue for players with similar
ratings.
2. The system identifies two players within the acceptable rating range for the selected
game.
3. The system pairs the players and sends a match invitation to each.
4. The system removes the paired players from the queue.
Alternative Flows:
● Player Disconnects: If a player disconnects while in the queue, the system removes
that player immediately.
● No Suitable Pair: If no matching pair is found within a preset time, the system
notifies the player or expands the acceptable rating range.
Postconditions:
● Both players are successfully paired, and the matchmaking queue is updated
accordingly.
Use Case 6: Confirm Match and Start Game Session
Scope:
Describes the final steps in the matchmaking process where paired players confirm the
match and join the game session.
Actors:
● Player (Primary)
● Opponent (Supporting)
● Matchmaking System (Supporting)
Preconditions:
● The system has paired two players for a match in a specific game.
● Both players have received a match invitation.
Trigger:
● The players receive a match confirmation notification.
Main Flow:
1. Both players receive details about the match (opponent, game type, etc.).
2. Each player confirms the match by accepting the invitation.
3. Upon receiving both confirmations, the system starts the game session for the
specific game.
4. The matchmaking system logs the match event for later rating or match history
updates.
Alternative Flows:
● Decline/Timeout: If one player declines or fails to respond in time, the system
cancels the match and may return the remaining player to the queue.
● Mid-Session Disconnect: If a player disconnects during confirmation, the match is
canceled and handled as a forfeit.
Postconditions:
● The game session is successfully initiated, and both players transition from
matchmaking into active gameplay.